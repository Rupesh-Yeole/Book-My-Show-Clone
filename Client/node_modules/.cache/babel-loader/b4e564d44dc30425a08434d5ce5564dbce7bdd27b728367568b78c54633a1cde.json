{"ast":null,"code":"import { serializeStyles } from '@emotion/serialize';\n\n/**\n * @title CSS 序列化函数\n * @param template - 模板字符串数组\n * @param args - CSS 插值数组\n * @returns CSS 序列化后的样式\n */\n\n/**\n * 提供给 createStyles 方法，用于将用户写入的 css 字符串序列化成特定结构的样式对象\n * @param args\n */\nexport var serializeCSS = function serializeCSS() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return (\n    // @ts-ignore\n    serializeStyles(args)\n  );\n};","map":{"version":3,"names":["serializeStyles","serializeCSS","_len","arguments","length","args","Array","_key"],"sources":["D:/HTML_Tutorial/MERN_Project/bookmyshow_clone/node_modules/antd-style/es/core/createSerializeStyles.js"],"sourcesContent":["import { serializeStyles } from '@emotion/serialize';\n\n/**\n * @title CSS 序列化函数\n * @param template - 模板字符串数组\n * @param args - CSS 插值数组\n * @returns CSS 序列化后的样式\n */\n\n/**\n * 提供给 createStyles 方法，用于将用户写入的 css 字符串序列化成特定结构的样式对象\n * @param args\n */\nexport var serializeCSS = function serializeCSS() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return (\n    // @ts-ignore\n    serializeStyles(args)\n  );\n};"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;;AAEpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;EAChD,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAC9B;EACA;IACE;IACAP,eAAe,CAACK,IAAI;EAAC;AAEzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}