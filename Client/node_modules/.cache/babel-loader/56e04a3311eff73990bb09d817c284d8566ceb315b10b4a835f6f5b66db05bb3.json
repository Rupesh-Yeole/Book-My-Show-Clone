{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext, useMemo } from 'react';\nimport { DEFAULT_THEME_CONTEXT } from \"../functions/setupStyled\";\nimport { useAntdTheme } from \"../hooks/useAntdTheme\";\nimport { useThemeMode } from \"../hooks/useThemeMode\";\nimport { ConfigProvider } from 'antd';\nexport var createUseTheme = function createUseTheme(options) {\n  return function () {\n    var StyleEngineContext = options.StyleEngineContext;\n    var _useContext = useContext(StyleEngineContext),\n      StyledThemeContext = _useContext.StyledThemeContext,\n      CustomThemeContext = _useContext.CustomThemeContext,\n      outPrefixCls = _useContext.prefixCls;\n    var antdTheme = useAntdTheme();\n    var themeState = useThemeMode();\n    var defaultCustomTheme = useContext(CustomThemeContext);\n    var styledTheme = useContext(StyledThemeContext !== null && StyledThemeContext !== void 0 ? StyledThemeContext : DEFAULT_THEME_CONTEXT) || {};\n    var _useContext2 = useContext(ConfigProvider.ConfigContext),\n      iconPrefixCls = _useContext2.iconPrefixCls,\n      getPrefixCls = _useContext2.getPrefixCls;\n    var antdPrefixCls = getPrefixCls();\n    // 只有当用户在 createInstance 中传入与 ant 不一样的 prefixCls 时，才会使用用户的 prefixCls\n    // 否则其他情况下都优先使用 antd 的 prefixCls\n    var prefixCls = outPrefixCls && outPrefixCls !== 'ant' ? outPrefixCls : antdPrefixCls;\n    var initTheme = useMemo(function () {\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, antdTheme), themeState), defaultCustomTheme), {}, {\n        prefixCls: prefixCls,\n        iconPrefixCls: iconPrefixCls\n      });\n    }, [antdTheme, themeState, defaultCustomTheme, prefixCls, iconPrefixCls]);\n\n    //  如果是个空值，说明没有套 Provider，返回 antdTheme 的默认值\n    if (!styledTheme || Object.keys(styledTheme).length === 0) {\n      return initTheme;\n    }\n    return _objectSpread(_objectSpread({}, styledTheme), {}, {\n      prefixCls: prefixCls,\n      iconPrefixCls: iconPrefixCls\n    });\n  };\n};","map":{"version":3,"names":["_objectSpread","useContext","useMemo","DEFAULT_THEME_CONTEXT","useAntdTheme","useThemeMode","ConfigProvider","createUseTheme","options","StyleEngineContext","_useContext","StyledThemeContext","CustomThemeContext","outPrefixCls","prefixCls","antdTheme","themeState","defaultCustomTheme","styledTheme","_useContext2","ConfigContext","iconPrefixCls","getPrefixCls","antdPrefixCls","initTheme","Object","keys","length"],"sources":["D:/HTML_Tutorial/MERN_Project/bookmyshow_clone/node_modules/antd-style/es/factories/createUseTheme.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext, useMemo } from 'react';\nimport { DEFAULT_THEME_CONTEXT } from \"../functions/setupStyled\";\nimport { useAntdTheme } from \"../hooks/useAntdTheme\";\nimport { useThemeMode } from \"../hooks/useThemeMode\";\nimport { ConfigProvider } from 'antd';\nexport var createUseTheme = function createUseTheme(options) {\n  return function () {\n    var StyleEngineContext = options.StyleEngineContext;\n    var _useContext = useContext(StyleEngineContext),\n      StyledThemeContext = _useContext.StyledThemeContext,\n      CustomThemeContext = _useContext.CustomThemeContext,\n      outPrefixCls = _useContext.prefixCls;\n    var antdTheme = useAntdTheme();\n    var themeState = useThemeMode();\n    var defaultCustomTheme = useContext(CustomThemeContext);\n    var styledTheme = useContext(StyledThemeContext !== null && StyledThemeContext !== void 0 ? StyledThemeContext : DEFAULT_THEME_CONTEXT) || {};\n    var _useContext2 = useContext(ConfigProvider.ConfigContext),\n      iconPrefixCls = _useContext2.iconPrefixCls,\n      getPrefixCls = _useContext2.getPrefixCls;\n    var antdPrefixCls = getPrefixCls();\n    // 只有当用户在 createInstance 中传入与 ant 不一样的 prefixCls 时，才会使用用户的 prefixCls\n    // 否则其他情况下都优先使用 antd 的 prefixCls\n    var prefixCls = outPrefixCls && outPrefixCls !== 'ant' ? outPrefixCls : antdPrefixCls;\n    var initTheme = useMemo(function () {\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, antdTheme), themeState), defaultCustomTheme), {}, {\n        prefixCls: prefixCls,\n        iconPrefixCls: iconPrefixCls\n      });\n    }, [antdTheme, themeState, defaultCustomTheme, prefixCls, iconPrefixCls]);\n\n    //  如果是个空值，说明没有套 Provider，返回 antdTheme 的默认值\n    if (!styledTheme || Object.keys(styledTheme).length === 0) {\n      return initTheme;\n    }\n    return _objectSpread(_objectSpread({}, styledTheme), {}, {\n      prefixCls: prefixCls,\n      iconPrefixCls: iconPrefixCls\n    });\n  };\n};"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,SAASC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,cAAc,QAAQ,MAAM;AACrC,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,OAAO,EAAE;EAC3D,OAAO,YAAY;IACjB,IAAIC,kBAAkB,GAAGD,OAAO,CAACC,kBAAkB;IACnD,IAAIC,WAAW,GAAGT,UAAU,CAACQ,kBAAkB,CAAC;MAC9CE,kBAAkB,GAAGD,WAAW,CAACC,kBAAkB;MACnDC,kBAAkB,GAAGF,WAAW,CAACE,kBAAkB;MACnDC,YAAY,GAAGH,WAAW,CAACI,SAAS;IACtC,IAAIC,SAAS,GAAGX,YAAY,CAAC,CAAC;IAC9B,IAAIY,UAAU,GAAGX,YAAY,CAAC,CAAC;IAC/B,IAAIY,kBAAkB,GAAGhB,UAAU,CAACW,kBAAkB,CAAC;IACvD,IAAIM,WAAW,GAAGjB,UAAU,CAACU,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAGA,kBAAkB,GAAGR,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC7I,IAAIgB,YAAY,GAAGlB,UAAU,CAACK,cAAc,CAACc,aAAa,CAAC;MACzDC,aAAa,GAAGF,YAAY,CAACE,aAAa;MAC1CC,YAAY,GAAGH,YAAY,CAACG,YAAY;IAC1C,IAAIC,aAAa,GAAGD,YAAY,CAAC,CAAC;IAClC;IACA;IACA,IAAIR,SAAS,GAAGD,YAAY,IAAIA,YAAY,KAAK,KAAK,GAAGA,YAAY,GAAGU,aAAa;IACrF,IAAIC,SAAS,GAAGtB,OAAO,CAAC,YAAY;MAClC,OAAOF,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEe,SAAS,CAAC,EAAEC,UAAU,CAAC,EAAEC,kBAAkB,CAAC,EAAE,CAAC,CAAC,EAAE;QACnHH,SAAS,EAAEA,SAAS;QACpBO,aAAa,EAAEA;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,CAACN,SAAS,EAAEC,UAAU,EAAEC,kBAAkB,EAAEH,SAAS,EAAEO,aAAa,CAAC,CAAC;;IAEzE;IACA,IAAI,CAACH,WAAW,IAAIO,MAAM,CAACC,IAAI,CAACR,WAAW,CAAC,CAACS,MAAM,KAAK,CAAC,EAAE;MACzD,OAAOH,SAAS;IAClB;IACA,OAAOxB,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEkB,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE;MACvDJ,SAAS,EAAEA,SAAS;MACpBO,aAAa,EAAEA;IACjB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}