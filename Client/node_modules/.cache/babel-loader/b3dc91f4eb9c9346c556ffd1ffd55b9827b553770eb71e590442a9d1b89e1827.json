{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { ConfigProvider, message, Modal, notification, theme } from 'antd';\nimport { memo, useEffect, useMemo } from 'react';\nimport { useThemeMode } from \"../../hooks\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AntdProvider = /*#__PURE__*/memo(function (_ref) {\n  var children = _ref.children,\n    themeProp = _ref.theme,\n    prefixCls = _ref.prefixCls,\n    getStaticInstance = _ref.getStaticInstance,\n    staticInstanceConfig = _ref.staticInstanceConfig;\n  var _useThemeMode = useThemeMode(),\n    appearance = _useThemeMode.appearance,\n    isDarkMode = _useThemeMode.isDarkMode;\n  var _message$useMessage = message.useMessage(staticInstanceConfig === null || staticInstanceConfig === void 0 ? void 0 : staticInstanceConfig.message),\n    _message$useMessage2 = _slicedToArray(_message$useMessage, 2),\n    messageInstance = _message$useMessage2[0],\n    messageContextHolder = _message$useMessage2[1];\n  var _notification$useNoti = notification.useNotification(staticInstanceConfig === null || staticInstanceConfig === void 0 ? void 0 : staticInstanceConfig.notification),\n    _notification$useNoti2 = _slicedToArray(_notification$useNoti, 2),\n    notificationInstance = _notification$useNoti2[0],\n    notificationContextHolder = _notification$useNoti2[1];\n  var _Modal$useModal = Modal.useModal(),\n    _Modal$useModal2 = _slicedToArray(_Modal$useModal, 2),\n    modalInstance = _Modal$useModal2[0],\n    modalContextHolder = _Modal$useModal2[1];\n  useEffect(function () {\n    getStaticInstance === null || getStaticInstance === void 0 || getStaticInstance({\n      message: messageInstance,\n      modal: modalInstance,\n      notification: notificationInstance\n    });\n  }, []);\n\n  // 获取 antd 主题\n  var antdTheme = useMemo(function () {\n    var baseAlgorithm = isDarkMode ? theme.darkAlgorithm : theme.defaultAlgorithm;\n    var antdTheme = themeProp;\n    if (typeof themeProp === 'function') {\n      antdTheme = themeProp(appearance);\n    }\n    if (!antdTheme) {\n      return {\n        algorithm: baseAlgorithm\n      };\n    }\n\n    // 如果有 themeProp 说明是外部传入的 theme，需要对算法做一个合并处理，因此先把 themeProp 的算法规整为一个数组\n    var algoProp = !antdTheme.algorithm ? [] : antdTheme.algorithm instanceof Array ? antdTheme.algorithm : [antdTheme.algorithm];\n    return _objectSpread(_objectSpread({}, antdTheme), {}, {\n      algorithm: !antdTheme.algorithm ? baseAlgorithm : [baseAlgorithm].concat(_toConsumableArray(algoProp))\n    });\n  }, [themeProp, isDarkMode]);\n  return /*#__PURE__*/_jsxs(ConfigProvider, {\n    prefixCls: prefixCls,\n    theme: antdTheme,\n    children: [messageContextHolder, notificationContextHolder, modalContextHolder, children]\n  });\n});\nAntdProvider.displayName = 'AntdProvider';\nexport default AntdProvider;","map":{"version":3,"names":["_toConsumableArray","_objectSpread","_slicedToArray","ConfigProvider","message","Modal","notification","theme","memo","useEffect","useMemo","useThemeMode","jsxs","_jsxs","AntdProvider","_ref","children","themeProp","prefixCls","getStaticInstance","staticInstanceConfig","_useThemeMode","appearance","isDarkMode","_message$useMessage","useMessage","_message$useMessage2","messageInstance","messageContextHolder","_notification$useNoti","useNotification","_notification$useNoti2","notificationInstance","notificationContextHolder","_Modal$useModal","useModal","_Modal$useModal2","modalInstance","modalContextHolder","modal","antdTheme","baseAlgorithm","darkAlgorithm","defaultAlgorithm","algorithm","algoProp","Array","concat","displayName"],"sources":["D:/HTML_Tutorial/MERN_Project/bookmyshow_clone/node_modules/antd-style/es/factories/createThemeProvider/AntdProvider.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { ConfigProvider, message, Modal, notification, theme } from 'antd';\nimport { memo, useEffect, useMemo } from 'react';\nimport { useThemeMode } from \"../../hooks\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AntdProvider = /*#__PURE__*/memo(function (_ref) {\n  var children = _ref.children,\n    themeProp = _ref.theme,\n    prefixCls = _ref.prefixCls,\n    getStaticInstance = _ref.getStaticInstance,\n    staticInstanceConfig = _ref.staticInstanceConfig;\n  var _useThemeMode = useThemeMode(),\n    appearance = _useThemeMode.appearance,\n    isDarkMode = _useThemeMode.isDarkMode;\n  var _message$useMessage = message.useMessage(staticInstanceConfig === null || staticInstanceConfig === void 0 ? void 0 : staticInstanceConfig.message),\n    _message$useMessage2 = _slicedToArray(_message$useMessage, 2),\n    messageInstance = _message$useMessage2[0],\n    messageContextHolder = _message$useMessage2[1];\n  var _notification$useNoti = notification.useNotification(staticInstanceConfig === null || staticInstanceConfig === void 0 ? void 0 : staticInstanceConfig.notification),\n    _notification$useNoti2 = _slicedToArray(_notification$useNoti, 2),\n    notificationInstance = _notification$useNoti2[0],\n    notificationContextHolder = _notification$useNoti2[1];\n  var _Modal$useModal = Modal.useModal(),\n    _Modal$useModal2 = _slicedToArray(_Modal$useModal, 2),\n    modalInstance = _Modal$useModal2[0],\n    modalContextHolder = _Modal$useModal2[1];\n  useEffect(function () {\n    getStaticInstance === null || getStaticInstance === void 0 || getStaticInstance({\n      message: messageInstance,\n      modal: modalInstance,\n      notification: notificationInstance\n    });\n  }, []);\n\n  // 获取 antd 主题\n  var antdTheme = useMemo(function () {\n    var baseAlgorithm = isDarkMode ? theme.darkAlgorithm : theme.defaultAlgorithm;\n    var antdTheme = themeProp;\n    if (typeof themeProp === 'function') {\n      antdTheme = themeProp(appearance);\n    }\n    if (!antdTheme) {\n      return {\n        algorithm: baseAlgorithm\n      };\n    }\n\n    // 如果有 themeProp 说明是外部传入的 theme，需要对算法做一个合并处理，因此先把 themeProp 的算法规整为一个数组\n    var algoProp = !antdTheme.algorithm ? [] : antdTheme.algorithm instanceof Array ? antdTheme.algorithm : [antdTheme.algorithm];\n    return _objectSpread(_objectSpread({}, antdTheme), {}, {\n      algorithm: !antdTheme.algorithm ? baseAlgorithm : [baseAlgorithm].concat(_toConsumableArray(algoProp))\n    });\n  }, [themeProp, isDarkMode]);\n  return /*#__PURE__*/_jsxs(ConfigProvider, {\n    prefixCls: prefixCls,\n    theme: antdTheme,\n    children: [messageContextHolder, notificationContextHolder, modalContextHolder, children]\n  });\n});\nAntdProvider.displayName = 'AntdProvider';\nexport default AntdProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}