{"ast":null,"code":"import { createHashStyleName, insertStyles } from \"./insertStyles\";\nimport { classnames, isReactCssResult, mergeCSS } from \"../utils\";\nimport { serializeStyles } from '@emotion/serialize';\nvar createClassNameGenerator = function createClassNameGenerator(cache, options) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // @ts-ignore\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false, options);\n    return createHashStyleName(cache.key, serialized.name);\n  };\n};\nvar createCX = function createCX(cache, classNameGenerator) {\n  return function () {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n    // 由于使用了 reactCss 作为基础样式工具，因此在使用 cx 级联 className 时需要使用特殊处理的 cx\n    // 要将 reactCss 的产出转为 css 产物\n    var className = classNames.map(function (c) {\n      return isReactCssResult(c) ? classNameGenerator(c) : c;\n    });\n    return mergeCSS(cache.registered, classNameGenerator, classnames(className));\n  };\n};\n\n/**\n * CSS相关方法生成器 用于序列化的样式转换生成 className\n * @param cache\n * @param options\n */\nexport var createCSS = function createCSS(cache, options) {\n  var css = createClassNameGenerator(cache, {\n    hashPriority: options.hashPriority || 'high',\n    label: options.label\n  });\n  var cx = createCX(cache, css);\n  return {\n    css: css,\n    cx: cx\n  };\n};","map":{"version":3,"names":["createHashStyleName","insertStyles","classnames","isReactCssResult","mergeCSS","serializeStyles","createClassNameGenerator","cache","options","_len","arguments","length","args","Array","_key","serialized","registered","undefined","key","name","createCX","classNameGenerator","_len2","classNames","_key2","className","map","c","createCSS","css","hashPriority","label","cx"],"sources":["D:/HTML_Tutorial/MERN_Project/bookmyshow_clone/node_modules/antd-style/es/core/createCSS.js"],"sourcesContent":["import { createHashStyleName, insertStyles } from \"./insertStyles\";\nimport { classnames, isReactCssResult, mergeCSS } from \"../utils\";\nimport { serializeStyles } from '@emotion/serialize';\nvar createClassNameGenerator = function createClassNameGenerator(cache, options) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // @ts-ignore\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false, options);\n    return createHashStyleName(cache.key, serialized.name);\n  };\n};\nvar createCX = function createCX(cache, classNameGenerator) {\n  return function () {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n    // 由于使用了 reactCss 作为基础样式工具，因此在使用 cx 级联 className 时需要使用特殊处理的 cx\n    // 要将 reactCss 的产出转为 css 产物\n    var className = classNames.map(function (c) {\n      return isReactCssResult(c) ? classNameGenerator(c) : c;\n    });\n    return mergeCSS(cache.registered, classNameGenerator, classnames(className));\n  };\n};\n\n/**\n * CSS相关方法生成器 用于序列化的样式转换生成 className\n * @param cache\n * @param options\n */\nexport var createCSS = function createCSS(cache, options) {\n  var css = createClassNameGenerator(cache, {\n    hashPriority: options.hashPriority || 'high',\n    label: options.label\n  });\n  var cx = createCX(cache, css);\n  return {\n    css: css,\n    cx: cx\n  };\n};"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,YAAY,QAAQ,gBAAgB;AAClE,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,UAAU;AACjE,SAASC,eAAe,QAAQ,oBAAoB;AACpD,IAAIC,wBAAwB,GAAG,SAASA,wBAAwBA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC/E,OAAO,YAAY;IACjB,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IACA;IACA,IAAIC,UAAU,GAAGV,eAAe,CAACO,IAAI,EAAEL,KAAK,CAACS,UAAU,EAAEC,SAAS,CAAC;IACnEhB,YAAY,CAACM,KAAK,EAAEQ,UAAU,EAAE,KAAK,EAAEP,OAAO,CAAC;IAC/C,OAAOR,mBAAmB,CAACO,KAAK,CAACW,GAAG,EAAEH,UAAU,CAACI,IAAI,CAAC;EACxD,CAAC;AACH,CAAC;AACD,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACb,KAAK,EAAEc,kBAAkB,EAAE;EAC1D,OAAO,YAAY;IACjB,KAAK,IAAIC,KAAK,GAAGZ,SAAS,CAACC,MAAM,EAAEY,UAAU,GAAG,IAAIV,KAAK,CAACS,KAAK,CAAC,EAAEE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,EAAEE,KAAK,EAAE,EAAE;MACnGD,UAAU,CAACC,KAAK,CAAC,GAAGd,SAAS,CAACc,KAAK,CAAC;IACtC;IACA;IACA;IACA,IAAIC,SAAS,GAAGF,UAAU,CAACG,GAAG,CAAC,UAAUC,CAAC,EAAE;MAC1C,OAAOxB,gBAAgB,CAACwB,CAAC,CAAC,GAAGN,kBAAkB,CAACM,CAAC,CAAC,GAAGA,CAAC;IACxD,CAAC,CAAC;IACF,OAAOvB,QAAQ,CAACG,KAAK,CAACS,UAAU,EAAEK,kBAAkB,EAAEnB,UAAU,CAACuB,SAAS,CAAC,CAAC;EAC9E,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIG,SAAS,GAAG,SAASA,SAASA,CAACrB,KAAK,EAAEC,OAAO,EAAE;EACxD,IAAIqB,GAAG,GAAGvB,wBAAwB,CAACC,KAAK,EAAE;IACxCuB,YAAY,EAAEtB,OAAO,CAACsB,YAAY,IAAI,MAAM;IAC5CC,KAAK,EAAEvB,OAAO,CAACuB;EACjB,CAAC,CAAC;EACF,IAAIC,EAAE,GAAGZ,QAAQ,CAACb,KAAK,EAAEsB,GAAG,CAAC;EAC7B,OAAO;IACLA,GAAG,EAAEA,GAAG;IACRG,EAAE,EAAEA;EACN,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}